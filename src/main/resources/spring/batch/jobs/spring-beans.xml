<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xsi:schemaLocation="http://www.springframework.org/schema/batch   http://www.springframework.org/schema/batch/spring-batch-2.2.xsd   http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.1.xsd">
   <import resource="../config/spring-context.xml" />
   <import resource="../config/spring-datasource.xml" />
   <bean id="report" class="com.jcg.spring.batch.Report" scope="prototype" />
   <bean id="itemProcessor" class="com.jcg.spring.batch.CustomItemProcessor" />
    <bean id="itemProcessor2" class="com.jcg.spring.batch.RowItemProcessor" />
    <batch:job-repository
        id = "jobRepository"
        isolation-level-for-create="READ_UNCOMMITTED"
        />
   <batch:job id="helloWorldJob" restartable="1">

       <batch:step id="checkUploadDir" allow-start-if-complete="true" next="step2">
           <batch:tasklet>
               <bean class="com.jcg.spring.batch.CheckUploadDirTasklet">
                   <property name="uploadDir" ref="parentDirectoryResource"/>
               </bean>
           </batch:tasklet>
           <!--<batch:end on="FAILED"/>
           <batch:next on="*" to="step2"/>-->

       </batch:step>

      <batch:step id="step2" next="step3" allow-start-if-complete="true">
         <batch:tasklet>
           <bean class="com.jcg.spring.batch.TableMetadataExtractor">
               <property name="jdbcTemplate" ref="jdbcTemplate"/>
           </bean>
         </batch:tasklet>
      </batch:step>
      <!--<batch:step id="step2">
         <batch:tasklet>
            <batch:chunk reader="cvsFileItemReader" writer="jdbcItemWriter" processor="itemProcessor" commit-interval="10" />
         </batch:tasklet>
      </batch:step>-->
       <batch:step id="step3" allow-start-if-complete="true" >
           <batch:tasklet>
               <batch:chunk reader="cvsFileItemReader2" writer="jdbcItemWriter2" processor="itemProcessor2" commit-interval="50000" skip-policy="skipPolicy" />
           </batch:tasklet>
           <batch:next on="NEXT_FILE" to="step3"/>
           <batch:end on="COMPLETED"/>
           <batch:listeners>
               <batch:listener>
                   <bean class="com.jcg.spring.batch.LoadStepExecutionListener"/>
               </batch:listener>
           </batch:listeners>
       </batch:step>


   </batch:job>

   <bean id="tokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
   </bean>
    <bean id="tokenizer2" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value="Â¤"/>
    </bean>
   <bean id="header" class="com.jcg.spring.batch.HeaderLineCallbackHandler">
      <property name="lineTokenizer" ref="tokenizer"/>
   </bean>
    <bean id="header2" class="com.jcg.spring.batch.HeaderLineCallbackHandler">
        <property name="lineTokenizer" ref="tokenizer2"/>
    </bean>



    <bean id="cvsFileItemReader2" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource">
            <bean parent="parentDirectoryResource">
                <property name="filePath" value="#{jobExecutionContext['nextFile']}"/>
            </bean>
        </property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer" ref="tokenizer2"/>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
                </property>

            </bean>
        </property>
        <property name="linesToSkip" value="1"/>
        <property name="skippedLinesCallback" ref="header2"/>
    </bean>


    <bean id="jdbcItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="assertUpdates" value="true" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="com.jcg.spring.batch.ProductMapSqlParameterSourceProvider" />
        </property>
        <property name="sql">
            <util:constant static-field="com.jcg.spring.batch.ProductMapSqlParameterSourceProvider.SQL"/>
        </property>
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="jdbcItemWriter2" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="assertUpdates" value="false" />
        <property name="itemSqlParameterSourceProvider">
            <bean class="com.jcg.spring.batch.CsvRowMapSqlParameterSourceProvider" scope="step">
                <property name="context" value="#{stepExecution}"/>
            </bean>

        </property>
        <property name="sql">
            <util:constant static-field="com.jcg.spring.batch.CsvRowMapSqlParameterSourceProvider.SQL"/>
        </property>
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="skipPolicy" class="com.jcg.spring.batch.SkipRowPolicy">
        <property name="skipLimit" value="10" />
    </bean>

    <bean id="smbSession" class="org.springframework.integration.smb.session.SmbSessionFactory">
        <property name="host" value="overmind"/>
        <property name="username" value="guest"/>
        <property name="password" value=""/>
        <property name="shareAndDir" value="public/maximk/"/>
    </bean>

    <bean id="parentDirectoryResource" class="com.jcg.spring.batch.SmbResource">
        <property name="filePath" value=""/>
        <property name="smbSessionFactory" ref="smbSession"/>
    </bean>


</beans>